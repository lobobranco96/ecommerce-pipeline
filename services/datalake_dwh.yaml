services:
  dwh_postgres:
    image: postgres:15
    container_name: dwh_postgres
    restart: always
    environment:
      POSTGRES_USER: dwh_user
      POSTGRES_PASSWORD: dwh_pass
      POSTGRES_DB: dwh_db
    ports:
      - "5433:5432"
    volumes:
      - dwh_pg_data:/var/lib/postgresql/data
    networks:
      - ecommerce_network

  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - conf/.credentials.env
    command: server /data --console-address ":9001"
    volumes:
      - lake_minio_vol:/data
      - ../mnt/minio:/data
      - ../mnt/minio/minio-client:/root/.mc
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - ecommerce_network

  minio-bucket:
    image: minio/mc:latest
    container_name: minio-bucket
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      sleep 10;
      until mc alias set myminio http://minio:9000 admin password >/dev/null 2>&1; do
        echo 'Aguardando MinIO...';
        sleep 5;
      done;
      echo 'MinIO está pronto. Iniciando configuração dos buckets.';
      mc mb myminio/raw;
      mc mb myminio/processed;
      echo 'Buckets criados com sucesso.';
      mc anonymous set public myminio/raw;
      mc anonymous set public myminio/processed;
      echo 'Políticas de acesso definidas para público.';
      "
    env_file:
      - conf/.credentials.conf
    networks:
      - ecommerce_network


volumes:
  lake_minio_vol:
  dwh_pg_data:

networks:
  ecommerce_network: